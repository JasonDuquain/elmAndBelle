* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  text-decoration: none;
  list-style-type: none;
  margin: 0;
  padding: 0;
}

body {
  font-size: 100%;
  font-family: 'Raleway', sans-serif;
  color: #333;
  text-decoration: none;
}

@media (max-width: 60em) {
  body {
    font-size: 90%;
  }
}

@media (max-width: 49.375em) {
  body {
    font-size: 85%;
  }
}

div.maxWrapper, section.maxWrapper {
  max-width: 1100px;
  margin: 0 auto;
}

p {
  line-height: 1.4;
}

section {
  padding: 8em 1.5em;
}

@media (max-width: 60em) {
  section {
    padding: 6em 1.5em;
  }
}

@media (max-width: 49.375em) {
  section {
    padding: 4.5em 1em;
  }
}

section.clippy {
  -webkit-clip-path: polygon(0 3vw, 100% 0, 100% calc(100% - 3vw), 0 100%);
          clip-path: polygon(0 3vw, 100% 0, 100% calc(100% - 3vw), 0 100%);
}

@supports ((-webkit-clip-path: polygon(0 0)) or (clip-path: polygon(0 0))) or (-webkit-clip-path: polygon(0 0)) {
  section.clippy, footer.clippy {
    margin-top: -3.4vw;
  }
}

div.headingWrapper {
  text-align: center;
  margin-bottom: 3em;
}

h2.sectHeading {
  font-size: 2.5em;
  font-weight: 300;
  display: inline-block;
  text-align: center;
  text-transform: uppercase;
  letter-spacing: 2px;
  position: relative;
}

@media (max-width: 60em) {
  h2.sectHeading {
    font-size: 2em;
  }
}

h2.sectHeading::before {
  content: "";
  position: absolute;
  display: block;
  height: .05em;
  /* was 2px*/
  width: 1em;
  /* was 16px*/
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  left: -1.5em;
  background-color: #e67e22;
}

h2.sectHeading::after {
  content: "";
  position: absolute;
  display: block;
  height: .05em;
  /* was 2px*/
  width: 1em;
  /*40px @ 16px*/
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  right: -1.5em;
  background-color: #e67e22;
}

h3 {
  font-size: 1.8em;
  margin-bottom: 1em;
}

@-webkit-keyframes highlightTarget {
  0% {
    letter-spacing: 8px;
    background-color: goldenrod;
  }
  100% {
    letter-spacing: 2px;
    background-color: inherit;
  }
}

@keyframes highlightTarget {
  0% {
    letter-spacing: 8px;
    background-color: goldenrod;
  }
  100% {
    letter-spacing: 2px;
    background-color: inherit;
  }
}

section:target h2.sectHeading {
  -webkit-animation: highlightTarget 1200ms ease-out;
          animation: highlightTarget 1200ms ease-out;
}

header {
  height: 100vh;
  padding: 1.5em;
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.4)), to(rgba(0, 0, 0, 0.4))), url(../img/hero.jpg);
  background-image: linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)), url(../img/hero.jpg);
  background-size: cover;
  background-attachment: fixed;
  background-position: 80% 0;
}

@media (max-width: 49.375em) {
  header {
    padding: 1em;
    background-position: center;
  }
}

div.hero--text {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  width: 85%;
}

@media (max-width: 49.375em) {
  div.hero--text {
    width: 100%;
    padding: 1em;
  }
}

div.hero--text h1 {
  color: #fff;
  font-size: 3em;
  font-weight: 300;
  text-transform: uppercase;
  margin-bottom: .3em;
  letter-spacing: 2px;
  word-spacing: 2px;
}

@media (max-width: 60em) {
  div.hero--text h1 {
    font-size: 2.5em;
  }
}

@media (max-width: 49.375em) {
  div.hero--text h1 {
    font-size: 2.1em;
  }
}

div.hero--text h2 {
  color: #fff;
  font-size: 2em;
  font-style: italic;
  font-weight: 300;
  margin-bottom: .7em;
}

@media (max-width: 60em) {
  div.hero--text h2 {
    font-size: 1.5em;
  }
}

@media (max-width: 49.375em) {
  div.hero--text h2 {
    font-size: 1.2em;
  }
}

a.btn:link, a.btn:visited, input[type="submit"] {
  display: inline-block;
  padding: .75em 1.2em;
  border: 1px solid #e67e22;
  border-radius: 999em;
  -webkit-transition: all 300ms ease-out 50ms;
  transition: all 300ms ease-out 50ms;
}

a.btn-full:link, a.btn-full:visited, input[type="submit"] {
  margin-right: 1em;
  color: #fff;
  background-color: #e67e22;
}

a.btn-full:hover, input[type="submit"]:hover {
  background-color: #bf6516;
  border: 1px solid #bf6516;
}

a.btn-ghost:link, a.btn-ghost:visited {
  color: #e67e22;
}

a.btn-ghost:hover {
  color: #fff;
  background-color: #e67e22;
}

.fullNavWrapper {
  -webkit-transition: all 300ms ease-out;
  transition: all 300ms ease-out;
}

@media (max-width: 49.375em) {
  .fullNavWrapper {
    opacity: 0;
    visibility: hidden;
    -webkit-transform: scale(1.3);
            transform: scale(1.3);
    -webkit-transform-origin: center bottom;
            transform-origin: center bottom;
  }
}

.fullNavWrapper.sticky {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  background-color: rgba(0, 0, 0, 0.6);
  z-index: 100;
  padding-left: 2em;
  padding-right: 2em;
}

.fullNavWrapper.showMenu {
  opacity: 1;
  visibility: visible;
  -webkit-transform: scale(1);
          transform: scale(1);
}

.fullNavWrapper.showMenu div.navWrap {
  margin-top: 2em;
}

.fullNavWrapper.showMenu li.logoNav {
  margin-top: -1.8em;
  margin-bottom: -3.5em;
}

.fullNavWrapper.showMenu div.icons {
  display: none;
}

div.icons {
  margin-right: 3em;
  margin-left: 3em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: flex-end;
}

.fullNavWrapper.showMenu div.icons a:nth-child(2) {
  margin-right: auto;
}

.fullNavWrapper.sticky div.icons {
  margin-top: .3em;
}

i.fa {
  font-size: 1.2em;
  display: inline-block;
  -webkit-transition: -webkit-transform 200ms ease-in;
  transition: -webkit-transform 200ms ease-in;
  transition: transform 200ms ease-in;
  transition: transform 200ms ease-in, -webkit-transform 200ms ease-in;
}

div.icons i.fa:hover {
  -webkit-transform: scale(1.4);
          transform: scale(1.4);
}

div.icons a:not(:first-child) {
  margin-left: 1em;
}

.fa-facebook-square {
  color: #3b5998;
}

.fa-twitter-square {
  color: #00b6f1;
}

.fa-pinterest-square {
  color: #cb2027;
}

.fa-instagram {
  color: #c32aa3;
}

div.navWrap {
  margin-top: -1em;
}

nav.navs {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.fullNavWrapper.showMenu nav.navs {
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

li.logoNav {
  margin-right: auto;
  margin-left: auto;
  position: relative;
  pointer-events: none;
}

li.logoNav a {
  pointer-events: all;
}

.fullNavWrapper.showMenu li.logoNav {
  -webkit-box-ordinal-group: 0;
      -ms-flex-order: -1;
          order: -1;
  -webkit-box-flex: 0;
      -ms-flex: 0 0 100%;
          flex: 0 0 100%;
  text-align: center;
}

li.logoNav img.logo {
  border-radius: 50%;
  height: 6.25em;
  width: auto;
  margin-top: -1.1em;
  opacity: .9;
  -webkit-transition: all 300ms 300ms;
  transition: all 300ms 300ms;
}

div.fullNavWrapper.sticky li.logoNav img.logo {
  height: 70px;
  width: auto;
  margin-top: 0;
}

li.logoNav::before {
  font-size: 4em;
  font-weight: 500;
  line-height: .6;
  color: #e67e22;
  font-family: 'Tangerine', cursive;
  position: absolute;
  content: "Elm";
  top: 20%;
  right: 110%;
}

li.logoNav::after {
  font-size: 4em;
  font-weight: 500;
  line-height: .6;
  color: #e67e22;
  font-family: 'Tangerine', cursive;
  position: absolute;
  content: "Belle";
  top: 20%;
  left: 110%;
}

div.fullNavWrapper.sticky li.logoNav::before, div.fullNavWrapper.sticky li.logoNav::after {
  font-size: 3em;
  top: 30%;
}

nav.navs li:not(.logoNav) {
  margin-top: 1.5em;
}

/***ADDED TO ENSURE LOGO IS CENTERED - FIND A BETER FIX***/
nav.navs li:nth-child(2) {
  padding-right: 5em;
}

div.fullNavWrapper.showMenu nav.navs li:nth-child(2) {
  padding-right: 0;
}

div.fullNavWrapper.sticky li:not(.logoNav) {
  margin-top: 1.7em;
}

div.fullNavWrapper.showMenu li:not(.logoNav) {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 45%;
          flex: 0 0 45%;
  text-align: center;
}

nav.navs li:first-child, nav.navs li:nth-child(4) {
  margin-right: 1.5em;
}

nav.navs a:link, nav.navs a:visited {
  display: inline-block;
  color: #fff;
  text-transform: uppercase;
  position: relative;
  padding-bottom: .3125em;
}

nav.navs a:link::after, nav.navs a:visited::after {
  content: '';
  position: absolute;
  right: 50%;
  left: 50%;
  top: 100%;
  border-bottom: 0.125em solid #e67e22;
  -webkit-transition: all 300ms ease-out;
  transition: all 300ms ease-out;
}

/*mgiht need to add link and visited pseudo classes to avoid any conflicts!!!*/
nav.navs a:not(.logoAnch):hover::after {
  left: 0;
  right: 0;
}

div.fullNavWrapper.sticky nav.navs a:link, div.fullNavWrapper.sticky nav.navs a:visited {
  font-size: 1em;
}

nav.navs a.scrollHighlight {
  color: #e67e22;
}

.hamburger-menu {
  position: absolute;
  z-index: 9999;
  top: 1em;
  right: 1.5em;
  width: 20px;
  height: 19px;
  cursor: pointer;
  display: none;
}

@media (max-width: 49.375em) {
  .hamburger-menu {
    display: block;
  }
}

.hamburger-menu::before {
  position: absolute;
  content: "";
  top: 0;
  left: 0;
  height: 2px;
  width: 20px;
  background-color: #fff;
  -webkit-transform-origin: 0 0;
          transform-origin: 0 0;
  -webkit-transition: -webkit-transform 300ms ease-out;
  transition: -webkit-transform 300ms ease-out;
  transition: transform 300ms ease-out;
  transition: transform 300ms ease-out, -webkit-transform 300ms ease-out;
}

.hamburger-menu__middle {
  position: absolute;
  top: 8px;
  height: 2px;
  width: 20px;
  background-color: #fff;
  -webkit-transition: all 300ms ease-out;
  transition: all 300ms ease-out;
  -webkit-transform-origin: 0 50%;
          transform-origin: 0 50%;
}

.hamburger-menu::after {
  position: absolute;
  content: "";
  bottom: 0;
  left: 0;
  height: 2px;
  width: 20px;
  background-color: #fff;
  -webkit-transform-origin: 0 100%;
          transform-origin: 0 100%;
  -webkit-transition: -webkit-transform 300ms ease-out;
  transition: -webkit-transform 300ms ease-out;
  transition: transform 300ms ease-out;
  transition: transform 300ms ease-out, -webkit-transform 300ms ease-out;
}

.animateHamburger::before {
  -webkit-transform: rotate(45deg) scaleX(1.25);
          transform: rotate(45deg) scaleX(1.25);
}

.animateHamburger .hamburger-menu__middle {
  -webkit-transform: scaleX(0);
          transform: scaleX(0);
  opacity: 0;
}

.animateHamburger::after {
  -webkit-transform: rotate(-45deg) scaleX(1.25);
          transform: rotate(-45deg) scaleX(1.25);
}

div.gridOne {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-gap: 4em 2em;
  max-width: 90%;
  margin: 0 auto;
}

@media (max-width: 49.375em) {
  div.gridOne {
    display: block;
  }
}

div.pitch {
  -webkit-box-ordinal-group: 0;
      -ms-flex-order: -1;
          order: -1;
}

@media (max-width: 49.375em) {
  div.pitch {
    margin-bottom: 2em;
  }
}

section.intro p {
  line-height: 1.6;
}

section.intro p + p {
  margin-top: 1.6em;
}

section.intro h3 {
  text-align: center;
}

@media (max-width: 49.375em) {
  section.intro h3 {
    margin-bottom: .2em;
  }
}

div.firstImgs {
  -webkit-clip-path: polygon(50% 0, 100% 50%, 50% 100%, 0 50%);
          clip-path: polygon(50% 0, 100% 50%, 50% 100%, 0 50%);
  -webkit-transition: all 400ms ease-out;
  transition: all 400ms ease-out;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

@media (max-width: 49.375em) {
  div.firstImgs {
    display: block;
    float: left;
    margin-right: .8em;
    margin-bottom: .8em;
    shape-outside: circle();
    -webkit-clip-path: initial;
            clip-path: initial;
    border-radius: 50%;
    overflow: hidden;
    height: 210px;
    width: 210px;
  }
}

div.firstImgs.salonImg {
  float: right;
  margin-left: .8em;
  margin-bottom: .8em;
}

div.firstImgs:hover {
  -webkit-clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
          clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
}

@media (max-width: 49.375em) {
  div.firstImgs:hover {
    -webkit-clip-path: initial;
            clip-path: initial;
  }
}

div.firstImgs img {
  border-radius: 1em;
  display: block;
  width: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

@media (max-width: 49.375em) {
  div.firstImgs img {
    width: 350px;
    height: auto;
    border-radius: none;
  }
}

section.intro {
  background-color: black;
  color: #fff;
}

p.services-para {
  line-height: 1.6;
  font-size: 1.2em;
  max-width: 80%;
  margin: 0 auto;
  font-weight: 300;
}

div.gridTwo {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-column-gap: 2.5em;
  margin-top: 3em;
}

@media (max-width: 49.375em) {
  div.gridTwo {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
  }
}

div.services--content {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  padding: 1.5em;
  background-color: rgba(0, 0, 0, 0.1);
  border-radius: .4em;
}

@media (max-width: 49.375em) {
  div.services--content {
    -webkit-box-flex: 1;
        -ms-flex: 1 1 300px;
            flex: 1 1 300px;
    margin: 1em;
  }
}

div.services--content.pulsate.animateScroll {
  opacity: 1;
  visibility: visible;
  -webkit-animation: pulse 1100ms;
          animation: pulse 1100ms;
}

@-webkit-keyframes pulse {
  from {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  50% {
    -webkit-transform: scale(1.1);
            transform: scale(1.1);
  }
  to {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
}

@keyframes pulse {
  from {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  50% {
    -webkit-transform: scale(1.1);
            transform: scale(1.1);
  }
  to {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
}

.pulse {
  -webkit-animation-name: pulse;
          animation-name: pulse;
}

div.services--content p {
  margin-bottom: 1.5em;
}

div.services--content a.btn {
  margin-top: auto;
  -ms-flex-item-align: center;
      align-self: center;
}

div.services--content i {
  font-size: 250%;
  color: #e67e22;
  margin-bottom: .3em;
}

div.special {
  font-weight: 300;
  margin-top: 3em;
  max-width: 40%;
  padding: 1.5em;
  border-radius: 3em;
  background-image: -webkit-gradient(linear, left top, left bottom, from(#fff), to(#fefaf0));
  background-image: linear-gradient(#fff, #fefaf0);
  border-top: .625em solid #a00606;
  /* was 10px*/
  border-bottom: .625em solid #a00606;
  margin: 3em auto 0 auto;
}

@media (max-width: 49.375em) {
  div.special {
    width: 90%;
    max-width: none;
  }
}

div.special h3 {
  color: #a00606;
  text-align: center;
  font-size: 1.6em;
}

section.gallery {
  background-color: #000;
  color: #fff;
}

div.gridThree {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  grid-template-rows: 275px;
  grid-auto-rows: 275px;
  grid-gap: 1em;
  grid-auto-flow: row dense;
}

div.gridThree img {
  width: 100%;
  height: auto;
}

figure {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  position: relative;
  overflow: hidden;
  border-radius: 10px;
  background-color: #333;
  padding: 10px;
  margin: 5px;
}

figure div.imgWrap {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
}

figure img {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  -webkit-transform: scale(1);
          transform: scale(1);
  opacity: .6;
  -webkit-transition: all 300ms ease-out;
  transition: all 300ms ease-out;
  -o-object-fit: cover;
     object-fit: cover;
  -webkit-transform-origin: center top;
          transform-origin: center top;
}

figure:hover img {
  -webkit-transform: scale(1.3);
          transform: scale(1.3);
  opacity: 1;
}

figure.two-span {
  grid-row: auto / span 2;
}

figure div.imgWrap {
  overflow: hidden;
}

figure figcaption {
  text-align: right;
  margin-top: 10px;
  border-top: 1px solid rgba(255, 255, 255, 0.5);
  padding-top: 3px;
}

figure div.price {
  font-family: 'Tangerine', cursive;
  font-weight: 700;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  font-size: 4em;
  line-height: .7;
  opacity: 0;
  -webkit-transform: scale(4);
          transform: scale(4);
  color: #e67e22;
  -webkit-transition: all 300ms ease-out;
  transition: all 300ms ease-out;
}

figure:hover div.price {
  opacity: 1;
  z-index: 2;
  -webkit-transform: scale(1) translate(-50%, -50%);
          transform: scale(1) translate(-50%, -50%);
}

/* DOESNT WORK ON HOVER - POSSIBLE???

figure:hover figure::before {
    content: "$300";
    position: absolute;
    display: block;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 1.5em;
    opacity: 1;
}
*/
section.testimonials {
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.6)), to(rgba(0, 0, 0, 0.6))), url(../img/items.jpg);
  background-image: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url(../img/items.jpg);
  background-size: cover;
  background-position: center bottom;
  background-attachment: fixed;
  color: #fff;
}

div.gridFour {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-gap: 2.5em;
  margin-top: 7.5em;
  /* was 120px*/
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

@media (max-width: 49.375em) {
  div.gridFour {
    display: block;
  }
}

@media (max-width: 49.375em) {
  div.customer:not(.customer--one) {
    margin-top: 6.6em;
  }
}

div.customer--one {
  opacity: 0;
  visibility: hidden;
  -webkit-transform: translateX(-100%);
          transform: translateX(-100%);
  -webkit-transition: all 1100ms ease-out;
  transition: all 1100ms ease-out;
}

div.customer--one.animateScroll {
  opacity: 1;
  visibility: visible;
  -webkit-transform: translateX(0);
          transform: translateX(0);
}

div.customer--two {
  opacity: 0;
  visibility: hidden;
  -webkit-transform: translateY(100%);
          transform: translateY(100%);
  -webkit-transition: all 1100ms ease-out;
  transition: all 1100ms ease-out;
}

div.customer--two.animateScroll {
  opacity: 1;
  visibility: visible;
  -webkit-transform: translateY(0);
          transform: translateY(0);
}

div.customer--three {
  opacity: 0;
  visibility: hidden;
  -webkit-transform: translateX(100%);
          transform: translateX(100%);
  -webkit-transition: all 1100ms ease-out;
  transition: all 1100ms ease-out;
}

div.customer--three.animateScroll {
  opacity: 1;
  visibility: visible;
  -webkit-transform: translateX(0);
          transform: translateX(0);
}

div.customer--content {
  background-color: rgba(255, 255, 255, 0.4);
  padding: 1.5em;
  border: .3125em solid #fff;
  border-radius: .25em;
}

div.userWrap {
  text-align: center;
  margin-top: -6.6875em;
  /*was -107px*/
}

img.userPic {
  border-radius: 50%;
  border: .3125em solid #fff;
  width: 9.6875em;
  /* was 155px*/
  height: auto;
}

h2.user--name {
  margin-top: 1em;
  text-align: center;
  font-weight: 400;
  margin-bottom: .2em;
}

@media (max-width: 49.375em) {
  h2.user--name {
    margin-top: .4em;
  }
}

p.user--visits {
  text-align: center;
  margin-bottom: .75em;
}

div.quoteWrap {
  padding: 2em;
  background-color: #e67e22;
  margin-left: -1.5em;
  margin-right: -1.5em;
  -webkit-clip-path: polygon(0 1em, 100% 0, 100% calc(100% - 1em), 0 100%);
          clip-path: polygon(0 1em, 100% 0, 100% calc(100% - 1em), 0 100%);
  color: #fff;
}

blockquote {
  margin-bottom: 1em;
  line-height: 1.4;
  font-weight: 300;
  position: relative;
}

blockquote::before {
  content: "\201C";
  color: rgba(255, 255, 255, 0.3);
  font-size: 11em;
  line-height: .5;
  display: block;
  position: absolute;
  top: .05em;
  left: -.22em;
  font-family: sans-serif;
}

cite {
  display: block;
  font-style: italic;
  text-align: right;
  font-weight: 300;
}

form.gridFive {
  display: grid;
  font-family: 'Raleway';
  color: #333;
  grid-template-columns: 1fr 1fr;
  grid-row-gap: 1em;
  width: 60%;
  margin: 0 auto;
}

div.form--column:nth-of-type(2n + 1) {
  justify-self: end;
  padding-right: 2em;
  -ms-flex-item-align: center;
      align-self: center;
}

div.submit-column {
  grid-column: 1/-1;
  margin: 2em auto 0 auto;
}

input:not([type="submit"]), select {
  width: 100%;
  padding: 7px;
  border-radius: 3px;
  border: 1px solid #ccc;
  color: inherit;
}

input:not([type="submit"]):focus, textarea:focus {
  -webkit-box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.7);
          box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.7);
}

textarea {
  color: inherit;
  height: 100px;
  width: 100%;
  padding: .1em;
  resize: none;
}

form * {
  outline: none;
}

footer {
  padding: 6em 1.5em;
  font-size: .8em;
  background-color: black;
  color: #888;
  -webkit-clip-path: polygon(0 3vw, 100% 0, 100% 100%, 0 100%);
          clip-path: polygon(0 3vw, 100% 0, 100% 100%, 0 100%);
}

div.footer--copyright {
  text-align: center;
  margin-bottom: 1.5em;
}

p.footer--main {
  max-width: 70%;
  margin: 0 auto 2em auto;
}

@media (max-width: 49.375em) {
  p.footer--main {
    max-width: none;
  }
}

div.footerNavWrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
}

div.footer--icons {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  width: 15%;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

@media (max-width: 49.375em) {
  div.footer--icons {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
    margin-top: 1.6em;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    font-size: 1.4em;
  }
}

div.footer--icons a {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
}

@media (max-width: 49.375em) {
  div.footer--icons a {
    -webkit-box-flex: initial;
        -ms-flex: initial;
            flex: initial;
    margin-right: 1.2em;
  }
}

div.footer--icons i {
  color: #888;
  -webkit-transition: color 300ms ease-out 50ms;
  transition: color 300ms ease-out 50ms;
}

div.footer--icons i:hover {
  color: #924d10;
}

div.footer--navs {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  width: 40%;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

@media (max-width: 49.375em) {
  div.footer--navs {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
  }
}

div.footer--navs a {
  color: #e67e22;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
  border-bottom: 1px solid transparent;
  padding-bottom: .3em;
  display: inline-block;
}

div.footer--navs a:hover {
  color: #924d10;
  border-bottom-color: currentColor;
}

/* make sure breakpoint-to-ems mixin is in var/scss file, not here!*/
#back-to-top {
  font-size: .75em;
  text-decoration: none;
  position: fixed;
  bottom: 3em;
  right: 3em;
  background-color: rgba(255, 255, 255, 0.9);
  color: #313943;
  border: none;
  border-radius: 5px;
  padding: 1em;
  text-transform: uppercase;
  cursor: pointer;
  font-weight: 700;
  -webkit-box-shadow: 0 0 2em 0 rgba(0, 0, 0, 0.25);
          box-shadow: 0 0 2em 0 rgba(0, 0, 0, 0.25);
  -webkit-transition: all .3s ease-in-out;
  transition: all .3s ease-in-out;
  display: block;
  opacity: 0;
  visibility: hidden;
}

#back-to-top:hover {
  padding: 1em 2em;
}

#back-to-top.visible {
  opacity: 1;
  visibility: visible;
}

nav.fixed {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 100;
  opacity: .8;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
